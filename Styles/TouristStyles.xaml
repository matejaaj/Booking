<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit">

    <!-- Globalni stil za Border -->
    <Style x:Key="DefaultBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushColor}"/>
        <Setter Property="Margin" Value="30 0 10 10"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Padding" Value="10"/>
    </Style>

    <!-- Globalni stil za Button -->
    <Style x:Key="DefaultButton" TargetType="Button">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextColor}"/>
        <!-- Fixed text color to black -->
    </Style>

    <Style x:Key="SmallButton" TargetType="Button">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextColor}"/>
        <!-- Fixed text color to black -->
    </Style>

    <!-- Globalni stil za TextBlock koji se koristi za naslove -->
    <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <!-- Added for text color -->
    </Style>

    <Style x:Key="ItemHeaderTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <!-- Added for text color -->
    </Style>

    <Style x:Key="UserControlStyle" TargetType="UserControl">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <!-- Added for text color -->
    </Style>

    <Style x:Key="DriveItemHeaderTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="0 2 0 2"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <!-- Added for text color -->
    </Style>

    <Style x:Key="ParentTabStyle" TargetType="TabItem">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextColor}"/>
        <!-- Fixed text color to black -->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedTabBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonTextColor}"/>
                <!-- Fixed text color to black -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ChildTabStyle" TargetType="TabItem">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Width" Value="130"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextColor}"/>
        <!-- Fixed text color to black -->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedTabBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonTextColor}"/>
                <!-- Fixed text color to black -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FormLabel" TargetType="Label">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="40,0,0,15"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <!-- Added for text color -->
    </Style>


    <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                      Grid.Column="2"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Name="Border"
                                            Background="{DynamicResource SecondaryBackground}"
                                            BorderBrush="{DynamicResource PrimaryTextColor}"
                                            BorderThickness="1">
                                        <Path Name="Arrow"
                                              Fill="{DynamicResource PrimaryTextColor}"
                                              Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBackground}"/>
                                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryBackground}"/>
                                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}"/>
                                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource DisabledForegroundBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="3,3,23,3"
                                 Focusable="True"
                                 Background="{DynamicResource SecondaryBackground}"
                                 Foreground="{DynamicResource PrimaryTextColor}"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource SecondaryBackground}"
                                        BorderBrush="{DynamicResource PrimaryTextColor}"
                                        BorderThickness="1"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Stil za ComboBoxItem -->
    <Style x:Key="CustomComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontSize" Value="16"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FormInput" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="FormDatePicker" TargetType="DatePicker">
        <Style.Resources>
            <Style TargetType="DatePickerTextBox">
                <Setter Property="Background" Value="{DynamicResource SecondaryBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DatePickerTextBox">
                            <Grid>
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
                                </Grid.Resources>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                            <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ContentElement"/>
                                                <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="watermark_decorator"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="WatermarkStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Unwatermarked"/>
                                        <VisualState x:Name="Watermarked">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Unfocused"/>
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">
                                    <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Border x:Name="ContentElement" BorderBrush="#FFFFFFFF" BorderThickness="1" Visibility="Hidden"/>
                                        <Border x:Name="watermark_decorator" BorderBrush="#FFFFFFFF" BorderThickness="1" Visibility="Hidden">
                                            <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0" Padding="2"/>
                                        </Border>
                                        <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource SecondaryBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontSize" Value="16"/>
        <Style.Triggers>
            <!-- your triggers here -->
        </Style.Triggers>
    </Style>

    <Style x:Key="FormAutoCompleteBox" TargetType="controls:AutoCompleteBox">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5"/>
    </Style>


</ResourceDictionary>